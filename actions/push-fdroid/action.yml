name: "push-fdroid"
description: "将APK文件或下载链接推送到F-Droid仓库"
inputs:
  apk-path:
    description: "APK文件的路径或HTTP下载链接"
    required: true
  target-repo:
    description: "目标仓库（格式：用户名/仓库名），为空时使用当前仓库"
    required: false
    default: ""
  branch:
    description: "仓库分支，默认为actions"
    required: false
    default: "actions"
  github-token:
    description: "用于访问仓库的GitHub Token"
    required: true
runs:
  using: "composite"
  steps:
    - name: Clone and push APK
      shell: bash
      run: |
        # 首先处理APK路径或链接
        if [[ "${{ inputs.apk-path }}" =~ ^https?:// ]]; then
          # 是HTTP链接，稍后处理
          IS_HTTP_LINK=1
          APK_URL="${{ inputs.apk-path }}"
        else
          # 是本地文件，现在就确定绝对路径
          IS_HTTP_LINK=0
          if [[ "${{ inputs.apk-path }}" == /* ]]; then
            APK_SOURCE="${{ inputs.apk-path }}"
          else
            # 相对路径，获取当前目录的绝对路径
            CURRENT_DIR=$(pwd)
            APK_SOURCE="$CURRENT_DIR/${{ inputs.apk-path }}"
          fi
          # 验证文件存在
          if [ ! -f "$APK_SOURCE" ]; then
            echo "错误：找不到APK文件：$APK_SOURCE"
            exit 1
          fi
          echo "本地APK文件路径: $APK_SOURCE"
        fi
        
        # 创建临时工作目录
        TEMP_DIR=$(mktemp -d)
        echo "创建临时目录: $TEMP_DIR"
        
        if [ "$IS_HTTP_LINK" = "1" ]; then
          # 现在处理HTTP链接
          DOWNLOAD_LIST_FILE="$TEMP_DIR/apk_downloads_${GITHUB_RUN_ID}_${GITHUB_RUN_NUMBER}.txt"
          echo "$APK_URL" > "$DOWNLOAD_LIST_FILE"
          echo "检测到HTTP链接，已保存到下载列表文件: $DOWNLOAD_LIST_FILE"
          APK_SOURCE="$DOWNLOAD_LIST_FILE"
        fi

        cd "$TEMP_DIR"
        
        # 设置目标仓库
        TARGET_REPO="${{ inputs.target-repo }}"
        if [ -z "$TARGET_REPO" ]; then
          TARGET_REPO="${GITHUB_REPOSITORY}"
          echo "使用当前仓库: $TARGET_REPO"
        fi

        # 克隆仓库（使用指定分支）
        echo "正在克隆仓库..."
        git clone --depth 1 --branch ${{ inputs.branch }} "https://${{ inputs.github-token }}@github.com/${TARGET_REPO}.git" "$TEMP_DIR/temp-repo"
        cd "$TEMP_DIR/temp-repo"
        
        # 如果apk目录不存在则创建
        mkdir -p apk
        
        # 复制文件到apk目录
        if [ "$IS_HTTP_LINK" = "1" ]; then
          # 移动下载链接文件
          mv "$APK_SOURCE" "apk/"
        else
          # 复制APK文件
          cp "$APK_SOURCE" "apk/"
        fi
        
        # 配置git信息
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # 提交并推送更改
        git add -f apk/
        if [ "$IS_HTTP_LINK" = "1" ]; then
          git commit -m "更新: 添加APK下载链接 $(date +%Y-%m-%d)"
        else
          git commit -m "更新: 添加新的APK $(date +%Y-%m-%d)"
        fi
        git push

        # 清理临时目录
        cd /
        rm -rf "$TEMP_DIR"

branding:
  icon: upload
  color: green
